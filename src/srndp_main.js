// Generated by CoffeeScript 1.6.3
(function() {
  define(['cs!srndp_utils', 'cs!srndp_auth', 'cs!srndp_api', 'cs!objects/srndp_response', 'cs!objects/srndp_error', 'cs!srndp_settings', 'jquery'], function(_Utils, Auth, Api, ResponseObject, ErrorObject, Settings) {
    return window.SRNDP = {
      init: function(initObject) {
        _Utils.log("init serendip");
        if (!initObject.clientId) {
          this.reject(new ErrorObject("ERR_NOT_INITIALIZED"));
        }
        SRNDP_FB_IFRAME.contentWindow.postMessage("srndp-init:" + initObject.clientId, Settings.BASE_URL);
        return Auth.initClient(initObject.clientId, initObject.chrome_extension);
      },
      api: function(endpoint, params, auth, method) {
        var at;
        if (auth == null) {
          auth = false;
        }
        if (method == null) {
          method = 'GET';
        }
        at = null;
        if (auth) {
          at = Auth.getAccessToken();
        }
        return Api.call(endpoint, params, auth, at, method);
      },
      subscribe: function(event, callback) {
        return $(document).on(event, function(e, obj) {
          if (obj != null) {
            return callback(obj);
          }
        });
      },
      unsubcribe: function(event, callback) {
        if (callback != null) {
          return $(document).off(event, callback);
        }
      },
      login: function(network, implicit, rememberMe, state, newWindow) {
        if (implicit == null) {
          implicit = false;
        }
        if (rememberMe == null) {
          rememberMe = false;
        }
        if (newWindow == null) {
          newWindow = true;
        }
        return $.Deferred(function() {
          var _this = this;
          if (network === "serendip") {
            SRNDP_FB_IFRAME.contentWindow.postMessage("srndp-login-srndp", Settings.BASE_URL);
            return window.SRNDP_WAITING_FOR_LOGIN_MSG = this;
          } else {
            return Auth.login(network, implicit, rememberMe, state, newWindow).done(function(resp) {
              return _this.resolve(resp);
            }).fail(function(err) {
              return _this.reject(err);
            });
          }
        }).promise();
      },
      activate: function() {
        return Auth.activate();
      },
      register: function(username, name, rememberMe, email, location, shouldActivate) {
        if (rememberMe == null) {
          rememberMe = false;
        }
        return Auth.register(username, name, rememberMe, email, location, shouldActivate);
      },
      getLoginStatus: function() {
        return Auth.getLoginStatus();
      },
      isRegistered: function() {
        return Auth.isRegistered();
      },
      logout: function(facebook) {
        if (facebook == null) {
          facebook = false;
        }
        if (facebook) {
          SRNDP_FB_IFRAME.contentWindow.postMessage("srndp-logout-fb", Settings.BASE_URL);
        }
        return $.Deferred(function() {
          var _this = this;
          return Auth.logout().done(function(resp) {
            return _this.resolve(resp);
          }).fail(function(err) {
            return _this.reject(err);
          });
        }).promise();
      },
      connect: function(network, state, newWindow) {
        if (newWindow == null) {
          newWindow = true;
        }
        return $.Deferred(function() {
          return this.reject(new ErrorObject("ERR_NOT_SUPPORTED"));
        }).promise();
      },
      disconnect: function(network) {
        return $.Deferred(function() {
          return this.reject(new ErrorObject("ERR_NOT_SUPPORTED"));
        }).promise();
      }
    };
  });

}).call(this);
